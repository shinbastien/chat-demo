{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nlet id = 0;\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst CHAT_FINISHED = \"chatFinished\";\nconst REMOVE_CHAT = \"removeChat\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst useChat = (roomId, userName) => {\n  _s();\n\n  const [chat, setChat] = useState([]);\n  console.log(\"1\", chat);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        room: roomId,\n        name: userName\n      }\n    });\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, _ref => {\n      let {\n        messageId,\n        body,\n        senderId,\n        senderName,\n        ownedByCurrentUser\n      } = _ref;\n      const incomingMessage = { ...{\n          messageId,\n          body,\n          senderName,\n          ownedByCurrentUser\n        },\n        ownedByCurrentUser: senderId === socketRef.current.id\n      };\n      setChat(chat => [...chat, incomingMessage]);\n      console.log(\"2\", chat);\n    });\n    socketRef.current.on(REMOVE_CHAT, id => {\n      setChat(chat.filter(message => message.messageId !== id));\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId, chat, userName]);\n\n  const sendMessage = (messageBody, userName) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      messageId: id,\n      body: messageBody,\n      senderId: socketRef.current.id,\n      senderName: userName,\n      ownedByCurrentUser: true\n    });\n    id += 1;\n    console.log(id);\n    console.log(\"send socket info\");\n  };\n\n  const removeMessage = id => {\n    socketRef.current.emit(REMOVE_CHAT, {\n      messageId: id\n    });\n    console.log(\"send socket info\");\n  };\n\n  console.log(\"3\", chat);\n  return {\n    chat,\n    sendMessage\n  };\n};\n\n_s(useChat, \"JpQRaU4lj3UQCKThm7VtHlLvZuA=\");\n\nexport default useChat;","map":{"version":3,"sources":["C:/Users/Bastien/Desktop/social-moving-demo/src/useChat.js"],"names":["useEffect","useRef","useState","socketIOClient","id","NEW_CHAT_MESSAGE_EVENT","CHAT_FINISHED","REMOVE_CHAT","SOCKET_SERVER_URL","useChat","roomId","userName","chat","setChat","console","log","socketRef","current","query","room","name","on","messageId","body","senderId","senderName","ownedByCurrentUser","incomingMessage","filter","message","disconnect","sendMessage","messageBody","emit","removeMessage"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nlet id = 0;\r\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\r\nconst CHAT_FINISHED = \"chatFinished\";\r\nconst REMOVE_CHAT = \"removeChat\";\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId, userName) => {\r\n  const [chat, setChat] = useState([]);\r\n  console.log(\"1\", chat);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n      query: { \r\n        room: roomId,\r\n        name: userName,\r\n      },\r\n    });\r\n\r\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, ({messageId, body, senderId, senderName, ownedByCurrentUser}) => {\r\n      const incomingMessage = {\r\n        ...{messageId, body, senderName, ownedByCurrentUser},\r\n        ownedByCurrentUser: senderId === socketRef.current.id,\r\n      };\r\n      setChat((chat) => [...chat, incomingMessage]);\r\n      console.log(\"2\", chat);\r\n    });\r\n\r\n    socketRef.current.on(REMOVE_CHAT, (id) => {\r\n      setChat(chat.filter(message => message.messageId !== id));\r\n\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId, chat, userName]);\r\n\r\n\r\n  const sendMessage = (messageBody, userName) => {\r\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n      messageId: id,\r\n      body: messageBody,\r\n      senderId: socketRef.current.id,\r\n      senderName: userName,\r\n      ownedByCurrentUser: true,\r\n    });\r\n    id += 1;\r\n    console.log(id);\r\n    console.log(\"send socket info\");\r\n  };\r\n\r\n  const removeMessage = (id) => {\r\n    socketRef.current.emit(REMOVE_CHAT, {\r\n      messageId: id,\r\n    });\r\n    console.log(\"send socket info\");\r\n  };\r\n\r\n  console.log(\"3\", chat);\r\n  return { chat, sendMessage };\r\n};\r\n\r\nexport default useChat;\r\n"]},"metadata":{},"sourceType":"module"}