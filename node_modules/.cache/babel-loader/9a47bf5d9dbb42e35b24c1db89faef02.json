{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastien\\\\Desktop\\\\social-moving-demo\\\\src\\\\VideoChat\\\\VideoChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport './VideoChat.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport Lobby from '../Lobby';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    `;\n_c = Container;\nconst Row = styled.div`\n    display: flex;\n    width: 100%;\n`;\n_c2 = Row;\nconst Video = styled.video`\n    border: 1px solid blue;\n    width: 50%;\n    height: 50%;\n`;\n_c3 = Video;\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nfunction VideoChat() {\n  _s();\n\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io.connect(SOCKET_SERVER_URL);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"yourID\", id => {\n      setYourID(id);\n    });\n    socket.current.on(\"allUsers\", users => {\n      setUsers(users);\n    });\n    socket.current.on(\"hey\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      set;\n    });\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: yourID\n      });\n    });\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n  }\n\n  function acceptCall() {}\n\n  let UserVideo;\n\n  if (stream) {\n    UserVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      muted: true,\n      ref: userVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n  let PartnerVideo;\n\n  if (callAccepted) {\n    PartnerVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      ref: partnerVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n  let incomingCall;\n\n  if (receivingCall) {\n    incomingCall = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [caller, \" is calling you \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: acceptCall,\n        children: \" Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [UserVideo, PartnerVideo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: Object.keys(users).map(key => {\n        if (key === yourID) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => callPeer(key),\n          children: [\" Call \", key, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: incomingCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoChat, \"cS+RVRlORmnqKPnZY5LXZZa7HbQ=\");\n\n_c4 = VideoChat;\nexport default VideoChat;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"VideoChat\");","map":{"version":3,"sources":["C:/Users/Bastien/Desktop/social-moving-demo/src/VideoChat/VideoChat.js"],"names":["React","useCallback","useState","useEffect","useRef","io","Peer","styled","Lobby","Container","div","Row","Video","video","SOCKET_SERVER_URL","VideoChat","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userVideo","partnerVideo","socket","current","connect","navigator","mediaDevices","getUserMedia","audio","then","srcObject","on","id","data","from","set","callPeer","peer","initiator","trickle","emit","userToCall","signalData","signal","acceptCall","UserVideo","PartnerVideo","incomingCall","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, {useCallback, useState, useEffect, useRef} from 'react';\r\nimport './VideoChat.css'\r\nimport io from \"socket.io-client\"\r\nimport Peer from \"simple-peer\"\r\nimport styled from \"styled-components\";\r\n\r\nimport Lobby from '../Lobby'\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    `;\r\n\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n`\r\n\r\nconst Video = styled.video`\r\n    border: 1px solid blue;\r\n    width: 50%;\r\n    height: 50%;\r\n`\r\n\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nfunction VideoChat() {\r\n    const [yourID, setYourID] = useState(\"\")\r\n    const [users, setUsers] = useState({});\r\n    const [stream, setStream] = useState();\r\n    const [receivingCall, setReceivingCall] = useState(false);\r\n    const [caller, setCaller] = useState(\"\");\r\n    const [callerSignal, setCallerSignal] = useState();\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n\r\n    const userVideo = useRef();\r\n    const partnerVideo = useRef();\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io.connect(SOCKET_SERVER_URL);\r\n        navigator.mediaDevices.getUserMedia({video: true, audio: true}).then(stream => {\r\n            setStream(stream);\r\n            if (userVideo.current) {\r\n                userVideo.current.srcObject = stream;\r\n            }\r\n        })\r\n\r\n        socket.current.on(\"yourID\", (id) => {\r\n            setYourID(id);\r\n        })\r\n        socket.current.on(\"allUsers\", (users) => {\r\n            setUsers(users);\r\n        })\r\n        \r\n        socket.current.on(\"hey\", (data) => {\r\n            setReceivingCall(true);\r\n            setCaller(data.from);\r\n            set \r\n        })\r\n\r\n    }, []);\r\n\r\n    function callPeer(id) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream: stream,\r\n        }); \r\n\r\n        peer.on(\"signal\", data => { \r\n            socket.current.emit(\"callUser\", {userToCall: id, signalData: data, from: yourID})\r\n        });\r\n\r\n        peer.on(\"stream\", stream => {\r\n            if (partnerVideo.current) {\r\n                partnerVideo.current.srcObject = stream;\r\n            }\r\n        });\r\n\r\n        socket.current.on(\"callAccepted\", signal => {\r\n            setCallAccepted(true);\r\n            peer.signal(signal);\r\n        })\r\n\r\n    }\r\n\r\n    function acceptCall() {\r\n\r\n    }\r\n\r\n    let UserVideo;\r\n    if (stream) {\r\n        UserVideo = (\r\n            <Video playsInline muted ref={userVideo} autoPlay />\r\n        )\r\n    }\r\n\r\n    let PartnerVideo;\r\n    if (callAccepted) {\r\n        PartnerVideo = (\r\n            <Video playsInline ref = {partnerVideo} autoPlay />\r\n        )\r\n    }\r\n\r\n    let incomingCall;\r\n    if (receivingCall) {\r\n        incomingCall = (\r\n            <div>\r\n                <h1>{caller} is calling you </h1>\r\n                <button onClick={acceptCall}> Accept</button>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {UserVideo}\r\n                {PartnerVideo}\r\n            </Row>\r\n            <Row>\r\n                {Object.keys(users).map(key => {\r\n                    if (key === yourID) {\r\n                        return null;\r\n                    }\r\n                    return(\r\n                        <button onClick={() => callPeer(key)}> Call {key} </button>\r\n                    );\r\n                })}\r\n            </Row>\r\n            <Row>\r\n                {incomingCall}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default VideoChat;"]},"metadata":{},"sourceType":"module"}