{"ast":null,"code":"import \"./toast.css\";\n\nconst init = () => {\n  const node = document.createElement('section');\n  node.classList.add('gui-toast-group'); // var currentDiv = document.getElementsById(\"div1\");\n\n  document.firstElementChild.insertBefore(node, document.body);\n  return node;\n};\n\nconst createToast = text => {\n  const node = document.createElement('output');\n  node.innerText = text;\n  node.classList.add('gui-toast');\n  node.setAttribute('role', 'status');\n  return node;\n};\n\nconst addToast = toast => {\n  const {\n    matches: motionOK\n  } = window.matchMedia('(prefers-reduced-motion: no-preference)');\n  Toaster.children.length && motionOK ? flipToast(toast) : Toaster.appendChild(toast);\n};\n\nconst Toast = text => {\n  let toast = createToast(text);\n  addToast(toast);\n  return new Promise(async (resolve, reject) => {\n    await Promise.allSettled(toast.getAnimations().map(animation => animation.finished));\n    Toaster.removeChild(toast);\n    resolve();\n  });\n}; // https://aerotwist.com/blog/flip-your-animations/\n\n\n_c = Toast;\n\nconst flipToast = toast => {\n  // FIRST\n  const first = Toaster.offsetHeight; // add new child to change container size\n\n  Toaster.appendChild(toast); // LAST\n\n  const last = Toaster.offsetHeight; // INVERT\n\n  const invert = last - first; // PLAY\n\n  const animation = Toaster.animate([{\n    transform: `translateY(${invert}px)`\n  }, {\n    transform: 'translateY(0)'\n  }], {\n    duration: 150,\n    easing: 'ease-out'\n  });\n  animation.startTime = document.timeline.currentTime;\n};\n\nconst Toaster = init();\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["C:/Users/Bastien/Desktop/social-moving-demo/src/Toast/toast.js"],"names":["init","node","document","createElement","classList","add","firstElementChild","insertBefore","body","createToast","text","innerText","setAttribute","addToast","toast","matches","motionOK","window","matchMedia","Toaster","children","length","flipToast","appendChild","Toast","Promise","resolve","reject","allSettled","getAnimations","map","animation","finished","removeChild","first","offsetHeight","last","invert","animate","transform","duration","easing","startTime","timeline","currentTime"],"mappings":"AAAA,OAAO,aAAP;;AAEA,MAAMA,IAAI,GAAG,MAAM;AACjB,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAb;AACAF,EAAAA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,iBAAnB,EAFiB,CAGjB;;AACAH,EAAAA,QAAQ,CAACI,iBAAT,CAA2BC,YAA3B,CAAwCN,IAAxC,EAA8CC,QAAQ,CAACM,IAAvD;AACA,SAAOP,IAAP;AACD,CAND;;AAQA,MAAMQ,WAAW,GAAGC,IAAI,IAAI;AAC1B,QAAMT,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AAEAF,EAAAA,IAAI,CAACU,SAAL,GAAiBD,IAAjB;AACAT,EAAAA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,WAAnB;AACAJ,EAAAA,IAAI,CAACW,YAAL,CAAkB,MAAlB,EAA0B,QAA1B;AAEA,SAAOX,IAAP;AACD,CARD;;AAUA,MAAMY,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,OAAO,EAACC;AAAV,MAAuBC,MAAM,CAACC,UAAP,CAC3B,yCAD2B,CAA7B;AAIAC,EAAAA,OAAO,CAACC,QAAR,CAAiBC,MAAjB,IAA2BL,QAA3B,GACIM,SAAS,CAACR,KAAD,CADb,GAEIK,OAAO,CAACI,WAAR,CAAoBT,KAApB,CAFJ;AAGD,CARD;;AAUA,MAAMU,KAAK,GAAGd,IAAI,IAAI;AACpB,MAAII,KAAK,GAAGL,WAAW,CAACC,IAAD,CAAvB;AACAG,EAAAA,QAAQ,CAACC,KAAD,CAAR;AAEA,SAAO,IAAIW,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,UAAMF,OAAO,CAACG,UAAR,CACJd,KAAK,CAACe,aAAN,GAAsBC,GAAtB,CAA0BC,SAAS,IACjCA,SAAS,CAACC,QADZ,CADI,CAAN;AAKAb,IAAAA,OAAO,CAACc,WAAR,CAAoBnB,KAApB;AACAY,IAAAA,OAAO;AACR,GARM,CAAP;AASD,CAbD,C,CAeA;;;KAfMF,K;;AAgBN,MAAMF,SAAS,GAAGR,KAAK,IAAI;AACzB;AACA,QAAMoB,KAAK,GAAGf,OAAO,CAACgB,YAAtB,CAFyB,CAIzB;;AACAhB,EAAAA,OAAO,CAACI,WAAR,CAAoBT,KAApB,EALyB,CAOzB;;AACA,QAAMsB,IAAI,GAAGjB,OAAO,CAACgB,YAArB,CARyB,CAUzB;;AACA,QAAME,MAAM,GAAGD,IAAI,GAAGF,KAAtB,CAXyB,CAazB;;AACA,QAAMH,SAAS,GAAGZ,OAAO,CAACmB,OAAR,CAAgB,CAChC;AAAEC,IAAAA,SAAS,EAAG,cAAaF,MAAO;AAAlC,GADgC,EAEhC;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAFgC,CAAhB,EAGf;AACDC,IAAAA,QAAQ,EAAE,GADT;AAEDC,IAAAA,MAAM,EAAE;AAFP,GAHe,CAAlB;AAQAV,EAAAA,SAAS,CAACW,SAAV,GAAsBxC,QAAQ,CAACyC,QAAT,CAAkBC,WAAxC;AACD,CAvBD;;AAyBA,MAAMzB,OAAO,GAAGnB,IAAI,EAApB;AACA,eAAewB,KAAf","sourcesContent":["import \"./toast.css\";\r\n\r\nconst init = () => {\r\n  const node = document.createElement('section')\r\n  node.classList.add('gui-toast-group')\r\n  // var currentDiv = document.getElementsById(\"div1\");\r\n  document.firstElementChild.insertBefore(node, document.body)\r\n  return node\r\n}\r\n  \r\nconst createToast = text => {\r\n  const node = document.createElement('output')\r\n  \r\n  node.innerText = text\r\n  node.classList.add('gui-toast')\r\n  node.setAttribute('role', 'status')\r\n\r\n  return node\r\n}\r\n  \r\nconst addToast = toast => {\r\n  const { matches:motionOK } = window.matchMedia(\r\n    '(prefers-reduced-motion: no-preference)'\r\n  )\r\n\r\n  Toaster.children.length && motionOK\r\n    ? flipToast(toast)\r\n    : Toaster.appendChild(toast)\r\n}\r\n  \r\nconst Toast = text => {\r\n  let toast = createToast(text)\r\n  addToast(toast)\r\n\r\n  return new Promise(async (resolve, reject) => {\r\n    await Promise.allSettled(\r\n      toast.getAnimations().map(animation => \r\n        animation.finished\r\n      )\r\n    )\r\n    Toaster.removeChild(toast)\r\n    resolve() \r\n  })\r\n}\r\n  \r\n// https://aerotwist.com/blog/flip-your-animations/\r\nconst flipToast = toast => {\r\n  // FIRST\r\n  const first = Toaster.offsetHeight\r\n\r\n  // add new child to change container size\r\n  Toaster.appendChild(toast)\r\n\r\n  // LAST\r\n  const last = Toaster.offsetHeight\r\n\r\n  // INVERT\r\n  const invert = last - first\r\n\r\n  // PLAY\r\n  const animation = Toaster.animate([\r\n    { transform: `translateY(${invert}px)` },\r\n    { transform: 'translateY(0)' }\r\n  ], {\r\n    duration: 150,\r\n    easing: 'ease-out',\r\n  })\r\n\r\n  animation.startTime = document.timeline.currentTime\r\n}\r\n\r\nconst Toaster = init()\r\nexport default Toast"]},"metadata":{},"sourceType":"module"}