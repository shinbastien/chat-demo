{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastien\\\\Desktop\\\\social-moving-demo\\\\src\\\\VideoChat\\\\video.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n}; // function MakePeerConnection(\n//     groupID,\n//     userName,\n//     socket,\n//     participants,\n//     is_new,\n// ) {\n//     return (\n//         <Container>\n//             <StyledVideo muted ref = {userVideo} autoPlay playsInline />\n//             {peers.map ((peer, index) => {\n//                 return (\n//                     <Video key = {index} peer = {peer} />\n//                 )\n//             })}\n//         </Container>\n//     ) \n// }\n\nconst MakePeerConnection = (groupID, stream, userName, socket, users, is_new) => {\n  _s2();\n\n  const [peers, setPeers] = useState([]);\n  const userVideo = useRef();\n  const peersRef = useRef();\n  useEffect(() => {\n    userVideo.current.srcObject = stream;\n\n    if (is_new) {\n      users.forEach(otheruser => {\n        const peer = createPeer(otheruser, userName, stream, socket);\n        peersRef.current.push({\n          peerID: otheruser,\n          peer\n        });\n        peers.push(peer);\n      });\n      setPeers(peers);\n    }\n\n    socket.current.on(\"user joined\", payload => {\n      const peer = addPeer(payload.signal, payload.callerName, stream, socket);\n      peersRef.current.push({\n        peerID: payload.callerName,\n        peer\n      });\n      setPeers(users => [...users, peer]);\n    });\n    socket.current.on(\"receiving returned signal\", payload => {\n      const item = peersRef.current.find(p => p.peerID === payload.callerName);\n      item.peer.signal(payload.signal);\n    });\n  }, []);\n  return peers;\n};\n\n_s2(MakePeerConnection, \"K3Dn85TFPk9o+c4HITZtDppFNoI=\");\n\n_c3 = MakePeerConnection;\n\nfunction createPeer(userToSignal, callerName, stream, socket) {\n  const peer = new Peer({\n    initiator: true,\n    trickle: false,\n    stream\n  });\n  peer.on(\"signal\", signal => {\n    socket.current.emit(\"sending signal\", {\n      userToSignal,\n      callerName,\n      signal\n    });\n  });\n  return peer;\n}\n\nfunction addPeer(incomingSignal, callerName, stream, socket) {\n  const peer = new Peer({\n    initiator: false,\n    trickle: false,\n    stream\n  });\n  peer.on(\"signal\", signal => {\n    socket.current.emit(\"returning signal\", {\n      signal,\n      callerName\n    });\n  });\n  peer.signal(incomingSignal);\n  return peer;\n}\n\nexport default MakePeerConnection;\nexport { Video, Container, StyledVideo };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"MakePeerConnection\");","map":{"version":3,"sources":["C:/Users/Bastien/Desktop/social-moving-demo/src/VideoChat/video.jsx"],"names":["React","useEffect","useRef","useState","Peer","styled","Container","div","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","MakePeerConnection","groupID","userName","socket","users","is_new","peers","setPeers","userVideo","peersRef","forEach","otheruser","createPeer","push","peerID","payload","addPeer","signal","callerName","item","find","p","userToSignal","initiator","trickle","emit","incomingSignal"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    )\r\n}\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\n\r\n// function MakePeerConnection(\r\n//     groupID,\r\n//     userName,\r\n//     socket,\r\n//     participants,\r\n//     is_new,\r\n// ) {\r\n\r\n//     return (\r\n//         <Container>\r\n//             <StyledVideo muted ref = {userVideo} autoPlay playsInline />\r\n//             {peers.map ((peer, index) => {\r\n//                 return (\r\n//                     <Video key = {index} peer = {peer} />\r\n//                 )\r\n//             })}\r\n//         </Container>\r\n//     ) \r\n// }\r\n\r\nconst MakePeerConnection = (\r\n    groupID,\r\n    stream,\r\n    userName,\r\n    socket,\r\n    users,\r\n    is_new,\r\n    \r\n    ) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const userVideo = useRef();\r\n    const peersRef = useRef();\r\n\r\n    useEffect(() => {\r\n        userVideo.current.srcObject = stream;\r\n\r\n\r\n        if (is_new) {\r\n            users.forEach(otheruser => {\r\n                const peer = createPeer(otheruser, userName, stream, socket);\r\n                peersRef.current.push({\r\n                    peerID: otheruser,\r\n                    peer,\r\n                })\r\n                peers.push(peer);\r\n            })\r\n            setPeers(peers);\r\n        }\r\n\r\n\r\n        socket.current.on(\"user joined\", payload => {\r\n            const peer = addPeer(payload.signal, payload.callerName, stream, socket);\r\n            peersRef.current.push({\r\n                peerID: payload.callerName,\r\n                peer,\r\n            })\r\n\r\n            setPeers(users => [...users, peer]);\r\n        });\r\n\r\n        socket.current.on(\"receiving returned signal\", payload => {\r\n            const item = peersRef.current.find(p => p.peerID === payload.callerName);\r\n            item.peer.signal(payload.signal);\r\n        });\r\n    }, []);\r\n\r\n    return peers\r\n}\r\n\r\nfunction createPeer (userToSignal, callerName, stream, socket) {\r\n    const peer = new Peer({\r\n        initiator: true,\r\n        trickle: false,\r\n        stream,\r\n    });\r\n\r\n    peer.on(\"signal\", signal => {\r\n        socket.current.emit(\"sending signal\", {userToSignal, callerName, signal})\r\n    })\r\n\r\n    return peer;\r\n}\r\n\r\nfunction addPeer(incomingSignal, callerName, stream, socket) {\r\n    const peer = new Peer({\r\n        initiator: false, \r\n        trickle: false,\r\n        stream,\r\n    })\r\n\r\n    peer.on(\"signal\", signal => {\r\n        socket.current.emit(\"returning signal\", {signal, callerName})\r\n    })\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n}\r\n\r\n\r\nexport default MakePeerConnection;\r\nexport {Video, Container, StyledVideo};"]},"metadata":{},"sourceType":"module"}